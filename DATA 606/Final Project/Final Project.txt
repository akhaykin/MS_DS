---
title: "Final Project"
author: "Alex Khaykin"
date: "2022-11-26"
output: powerpoint_presentation
---


```{r tidy_data_verses, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(dataverse)
library(knitr)
library(kableExtra)
```

## Election Data Sample
```{r pres_elect_data}
pres <- get_dataframe_by_name(
  dataset = "10.7910/DVN/42MVDX",
  filename = "1976-2020-president.tab",
  server = "dataverse.harvard.edu"
) %>%
  select(
    year, state, candidatevotes, totalvotes, party = "party_simplified"
  ) %>% 
  mutate(across(where(~ "AsIs" %in% class(.x)), as.character)) %>%
  group_by(year, state, party) %>%
  summarise(
    party_votes = sum(candidatevotes, na.rm = TRUE),
    total_votes = mean(totalvotes, na.rm = TRUE),
    .groups = "drop"
  )

pres %>% 
  set_names(c("Year", "State", "Party", "Party Votes", "Total Votes")) %>% slice(1:10) %>% kable() %>%
  row_spec(1, align = "center")
```

## Crime Data Sample
```{r crime_data}
crime <- read_csv("./Proposal/violent_crimes_usafacts.csv") %>%
  slice(14:64) %>%
  rename(state = "Years") %>%
  mutate(across(c(-state), as.integer), state = str_to_upper(state)) %>%
  pivot_longer(
    -state,
    names_to = "year",
    values_to = "tot_violent_crime"
  ) %>%
  mutate(year = as.integer(year))
crime %>% slice(1:10) %>% kable()
```

## Presidential Election Data
```{r clean_merge_data}
crime_state <- crime %>%
  group_by(state) %>%
  arrange(year) %>%
  mutate(
    change_in_crime_4 = (tot_violent_crime - lag(tot_violent_crime, n = 4)) / 
      lag(tot_violent_crime, n = 4)
  )
vote_crime_state <- pres %>%
  group_by(year, state) %>%
  mutate(
    vote_pct = party_votes / total_votes,
    winner = if_else(vote_pct == max(vote_pct), party, NA_character_),
    winner = winner[which(!is.na(winner))]
  ) %>%
  group_by(state, party) %>%
  mutate(
    incumbent_win = winner == lag(winner),
    change_in_vote_pct = (vote_pct - lag(vote_pct)) / 
      lag(vote_pct)
  ) %>%
  ungroup() %>%
  left_join(crime_state, by = c("year", "state"))
vote_crime_state %>% slice(1:5) %>% kable()
```

## Correlation Heatmap
```{r heat_map}
no_heatmap <- vote_crime_state %>%
  group_by(state, party) %>%
  mutate(enough = n() > 2) %>%
  filter(!enough) %>%
  distinct(state, party)

heatmap_dat <- vote_crime_state %>%
  group_by(state, party) %>%
  mutate(enough = n() > 2) %>% 
  filter(enough) %>%
  nest(data = -c(state, party, enough)) %>%
  mutate(
    corr = map(
      data,
      ~ cor.test(.x$vote_pct, .x$tot_violent_crime, na.action = "na.omit") %>%
        broom::tidy() %>%
        mutate(
          sig_stars = case_when(
            p.value < 0.001 ~ "***",
            p.value < 0.01 ~ "**", 
            p.value < 0.05 ~ "*",
            p.value < 0.1 ~ ".",
            TRUE ~ ""
          )
        )
    )
  ) %>%
  ungroup() %>%
  select(-data) %>%
  unnest(corr) %>%
  bind_rows(no_heatmap)

heatmap_dat %>%
  filter(party %in% c("DEMOCRAT", "REPUBLICAN")) %>%
  ggplot(aes(x = party, y = state, label = sig_stars)) +
  geom_tile(aes(fill = estimate)) +
  geom_text(color = "white") +
  scale_fill_gradient2(
    low = "blue",
    mid = "white",
    high = "red",
    na.value = "grey50"
  ) +
  labs(
    x = NULL,
    y = NULL,
    fill = "Correlation",
    title = "Correlations of Total Election Votes and Violent Crime",
    subtitle = "(By State and Political Party)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    panel.grid = element_blank(),
    axis.text.y = element_text(size = 4)
  )
```

## Crime Data Spagetti Plot
```{r spagetti_plot}
highlight_states_crime <- vote_crime_state %>%
  group_by(state) %>%
  summarise(mn_chg = mean(change_in_crime_4, na.rm = T), .groups = "drop") %>%
  slice_max(abs(mn_chg), n = 5) %>%
  pull(state)

ggplot() +
  geom_line(
    data = vote_crime_state %>%
      filter(!state %in% highlight_states_crime)%>%
      distinct(year, state, change_in_crime_4),
    aes(x = year, y = change_in_crime_4, group = state),
    color = "gray"
  ) +
  geom_line(
    data = vote_crime_state %>% filter(state %in% highlight_states_crime),
    aes(x = year, y = change_in_crime_4, group = state, color = state)
  ) +
  theme_bw()
```
  
## Vote Change Over Time data Spagetti Plot
```{r spagetti_plot_change_vote}
highlight_states_vote <- vote_crime_state %>%
  group_by(state) %>%
  summarise(mn_chg = mean(change_in_vote_pct, na.rm = T), .groups = "drop") %>%
  slice_max(abs(mn_chg), n = 5) %>%
  pull(state)

ggplot() +
  geom_line(
    data = vote_crime_state %>% filter(party %in% c("DEMOCRAT", "REPUBLICAN"), !state %in% highlight_states_vote),
    aes(x = year, y = change_in_vote_pct, group = state),
    color = "gray"
  ) +
  geom_line(
    data = vote_crime_state %>% filter(party %in% c("DEMOCRAT", "REPUBLICAN"), state %in% highlight_states_vote),
    aes(x = year, y = change_in_vote_pct, group = state, color = state)
  ) +
  facet_wrap(~ party, ncol = 1, scales = "free_y")
```

## Incumbant Popular Vote Lolipop Plot
```{r incumbant_lol_plot}
vote_crime_state %>%
  distinct(state, year, incumbent_win) %>%
  drop_na(incumbent_win) %>%
  mutate(incumbent_win = as.numeric(incumbent_win)) %>%
  group_by(state) %>%
  summarise(incumbent_win = round(mean(incumbent_win), 3), .groups = "drop") %>% 
  ggplot(aes(reorder(state, incumbent_win), incumbent_win)) +
  geom_segment(aes(xend = state, yend = incumbent_win, y = 0)) +
  geom_point(color = "red", size = 3) +
  scale_y_continuous(labels = scales::percent) +
  labs(
    x = NULL,
    y = NULL,
    title = "Percent of Elections in Which the Incumbent Won by State",
    subtitle = "1980 - 2020"
  ) +
  coord_flip() +
  theme_bw() +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    axis.text.y = element_text(size = 4)
  )
```

## National Level Data Sample
```{r}
crime_national <- crime %>%
  group_by(year) %>%
  summarise(tot_violent_crime = sum(tot_violent_crime, na.rm = TRUE)) %>%
  arrange(year) %>%
  mutate(
    change_in_crime_4 = (tot_violent_crime - lag(tot_violent_crime, n = 4)) / 
      lag(tot_violent_crime, n = 4)
  )

# Clean presidential election data and add variables, then merge in crime data
vote_crime_national <- pres %>%
  pivot_wider(names_from = party, values_from = party_votes) %>%
  group_by(year) %>%
  summarise(
    across(c(total_votes, DEMOCRAT:REPUBLICAN), ~ sum(.x, na.rm = TRUE))
  ) %>%
  pivot_longer(
    DEMOCRAT:REPUBLICAN,
    names_to = "party",
    values_to = "party_votes"
  ) %>%
  mutate(
    vote_pct = party_votes / total_votes,
    winner = if_else(vote_pct == max(vote_pct), party, NA_character_),
    winner = winner[which(!is.na(winner))]
  ) %>%
  group_by(party) %>%
  mutate(
    incumbent_win = winner == lag(winner),
    change_in_vote_pct = (vote_pct - lag(vote_pct)) / 
      lag(vote_pct)
  ) %>%
  ungroup() %>%
  left_join(crime_national, by = c("year"))
crime_national %>% slice(30:39) %>% kable()
```

## National Change Vote % vS. Crime Change
```{r}
vote_crime_national %>%
  select(year, party, change_in_vote_pct, change_in_crime_4) %>%
  pivot_longer(
    -c(year, party),
    names_to = "series",
    values_to = "percentage"
  ) %>%
  ggplot(aes(year, percentage, group = series, color = series)) +
  geom_line() +
  facet_wrap(~ party, scales = "free_y") +
  theme_bw()
```

## Regression Analysis Natoinal Level
```{r regression}
vote_crime_reg <- glm(
  incumbent_win ~ change_in_crime_4,
  data = vote_crime_national,
  family = binomial("probit")
)

broom::tidy(vote_crime_reg) %>% kable()
broom::glance(vote_crime_reg) %>% kable()
```

